{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mesza\\\\OneDrive\\\\Dokumentumok\\\\meetup\\\\MeetUP\\\\Login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from \"react\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport axios from 'axios';\n\nvar Login = function Login() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var login = function login() {\n    var _await$axios$post, data;\n\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('http://192.168.0.104:3001/api/login', {\n              email: email,\n              password: password\n            }));\n\n          case 2:\n            _await$axios$post = _context.sent;\n            data = _await$axios$post.data;\n\n            if (!(data != \"Wrong email\" && data != \"Wrong password\")) {\n              _context.next = 11;\n              break;\n            }\n\n            axios.defaults.headers.authorization = \"Bearer \" + data.token;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', data.token));\n\n          case 8:\n            console.log(data.token);\n            _context.next = 12;\n            break;\n\n          case 11:\n            console.log(\"Nem sikerült bejelentkezni\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Email:\"), React.createElement(TextInput, {\n    value: email,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Password:\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: login,\n    title: \"Login\",\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: \"green\",\n    margin: 10,\n    padding: 8,\n    color: \"white\",\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: \"500\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"green\",\n    borderRadius: 10,\n    padding: 10\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/mesza/OneDrive/Dokumentumok/meetup/MeetUP/Login.js"],"names":["React","useState","Picker","axios","Login","password","setPassword","email","setEmail","login","post","data","defaults","headers","authorization","token","AsyncStorage","setItem","console","log","styles","container","input","button","StyleSheet","create","width","height","backgroundColor","margin","padding","color","borderRadius","fontSize","fontWeight","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import {  StyleSheet,  Text,  Button,  TouchableOpacity,  View,  TextInput,} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport axios from 'axios';\r\n\r\nconst Login = () =>{\r\n\r\n    const [password, setPassword] = useState();\r\n    const [email, setEmail] = useState();\r\n    const login = async () => {\r\n        const { data } = await axios.post('http://192.168.0.104:3001/api/login', {\r\n          email,\r\n          password,\r\n        })\r\n\r\n        if(data!=\"Wrong email\" && data!=\"Wrong password\" ){\r\n            axios.defaults.headers.authorization = `Bearer ${data.token}`\r\n            await AsyncStorage.setItem('token',data.token);\r\n            console.log(data.token)\r\n          } else {\r\n            console.log(\"Nem sikerült bejelentkezni\")\r\n          }\r\n        };\r\n\r\n    return (\r\n        <View style={styles.container}> \r\n            <Text>Email:</Text>\r\n            <TextInput value={email} onChangeText={email => setEmail(email)} style={styles.input} />\r\n            <Text>Password:</Text>\r\n            <TextInput secureTextEntry={true} value={password} onChangeText={password => setPassword(password)} style={styles.input} />\r\n            <Button onPress={login} title=\"Login\" style={styles.button}/>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    width: 350,\r\n    height: 55,\r\n    backgroundColor: \"green\",\r\n    margin: 10,\r\n    padding: 8,\r\n    color: \"white\",\r\n    borderRadius: 14,\r\n    fontSize: 18,\r\n    fontWeight: \"500\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"green\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}